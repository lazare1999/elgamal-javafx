plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'com.lazo'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.lazo.elgamal_javafx'
    mainClass = 'com.lazo.elgamal_javafx.ElgamalApplication'
}

javafx {
    version = '17.0.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

jlink {
    addExtraDependencies("javafx")
    mergedModule {
        requires 'javafx.graphics';
        requires 'java.logging';
        requires 'java.xml';
        requires 'java.desktop';
        requires 'java.security.jgss';
        requires 'javafx.base';
        requires 'jdk.unsupported';
        requires 'java.xml.crypto';
        requires 'java.management';
        requires 'java.naming';
        requires 'javafx.controls';
        requires 'jdk.javadoc';
//        provides 'org.tinylog.provider.LoggingProvider' with 'org.tinylog.core.TinylogLoggingProvider';
    }
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'elgamal'
    }
    jpackage {
        installerOptions = [
                '--copyright', 'Copyrigth 2022-now WALCZAK.IT'
        ]
        installerType = project.findProperty('installerType')
        if (installerType == 'msi') {
            imageOptions += ['--icon', 'src/main/resources/icon.png']
            installerOptions += [
                    '--win-per-user-install', '--win-dir-chooser',
                    '--win-menu', '--win-shortcut'
            ]
        }
        if (installerType == 'pkg') {
            imageOptions += ['--icon', 'src/main/resources/icon.png']
        }
        if (installerType in ['deb', 'rpm']) {
            imageOptions += ['--icon', 'src/main/resources/icon.png']
            installerOptions += [
                    '--linux-menu-group', 'Office',
                    '--linux-shortcut'
            ]
        }
        if (installerType == 'deb') {
            installerOptions += [
                    '--linux-deb-maintainer', 'lazarekvirtia@gmail.com'
            ]
        }
        if (installerType == 'rpm') {
            installerOptions += [
                    '--linux-rpm-license-type', 'GPLv3'
            ]
        }
    }
}

jpackage {
    doFirst {
        project.getProperty('installerType') // throws exception if its missing
    }
}

dependencies {

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

}

test {
    useJUnitPlatform()
}
